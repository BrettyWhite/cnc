name: PyPI Release

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install build dependencies
      run: |
          python3 -m pip install --upgrade build twine toml

    - name: Extract package name and version
      run: python3 extract_package_info.py
      
    - name: Set package name and version
      run: |
        cat env_output.txt >> $GITHUB_ENV

    - name: Check if version already exists on PyPI
      run: |
        PACKAGE_NAME=${{ env.PACKAGE_NAME }}
        PACKAGE_VERSION=${{ env.PACKAGE_VERSION }}
        VERSION_EXISTS=$(curl -s https://pypi.org/pypi/${PACKAGE_NAME}/json | python3 -c "import sys, json; data = json.load(sys.stdin); print('${PACKAGE_VERSION}' in data['releases'])")
        echo "VERSION_EXISTS=$VERSION_EXISTS" >> $GITHUB_ENV

    - name: Build the package
      if: env.VERSION_EXISTS == 'False'
      run: |
        python3 -m build

    - name: Publish to PyPI
      if: env.VERSION_EXISTS == 'False'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: |
        python3 -m twine upload dist/*
